// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PPC.TrainingDevelopment.Api.Data;

#nullable disable

namespace PPC.TrainingDevelopment.Api.Migrations
{
    [DbContext(typeof(TrainingDevelopmentDbContext))]
    [Migration("20251027212826_AddAuditLogTable")]
    partial class AddAuditLogTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PPC.TrainingDevelopment.Api.Models.AuditLog", b =>
                {
                    b.Property<int>("AuditLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuditLogId"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AdditionalInfo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Controller")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("DurationMs")
                        .HasColumnType("bigint");

                    b.Property<string>("ExceptionDetails")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("HttpMethod")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("QueryString")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("RequestBody")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestPath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ResponseBody")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusCode")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserAgent")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("AuditLogId");

                    b.HasIndex("Action");

                    b.HasIndex("Controller");

                    b.HasIndex("StatusCode");

                    b.HasIndex("Timestamp");

                    b.HasIndex("UserId");

                    b.HasIndex("Controller", "Action");

                    b.HasIndex("UserId", "Timestamp");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("PPC.TrainingDevelopment.Api.Models.Employee", b =>
                {
                    b.Property<string>("PersonnelNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool?>("Disability")
                        .HasColumnType("bit");

                    b.Property<string>("EECategory")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EELevel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("HighestQualification")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IDNumber")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Initials")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("JobGrade")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("JobTitle")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("KnownName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Race")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Site")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PersonnelNumber");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("PPC.TrainingDevelopment.Api.Models.EmployeeLookup", b =>
                {
                    b.Property<string>("PersonnelNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool?>("Disability")
                        .HasColumnType("bit");

                    b.Property<string>("EECategory")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EELevel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Initials")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("KnownName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Race")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PersonnelNumber");

                    b.HasIndex("Disability");

                    b.HasIndex("EECategory");

                    b.HasIndex("EELevel");

                    b.HasIndex("Gender");

                    b.HasIndex("LastName");

                    b.HasIndex("Race");

                    b.ToTable("EmployeeLookups");
                });

            modelBuilder.Entity("PPC.TrainingDevelopment.Api.Models.LookupValue", b =>
                {
                    b.Property<int>("LookupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LookupId"));

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LookupType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("LookupId");

                    b.HasIndex("LookupType");

                    b.HasIndex("ParentId");

                    b.HasIndex("LookupType", "IsActive");

                    b.ToTable("LookupValues");
                });

            modelBuilder.Entity("PPC.TrainingDevelopment.Api.Models.NonEmployee", b =>
                {
                    b.Property<string>("IDNumber")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.HasKey("IDNumber");

                    b.ToTable("NonEmployees");
                });

            modelBuilder.Entity("PPC.TrainingDevelopment.Api.Models.TrainingEvent", b =>
                {
                    b.Property<int>("TrainingEventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrainingEventId"));

                    b.Property<int>("EventTypeId")
                        .HasColumnType("int");

                    b.Property<string>("IDNumber")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<int>("MunicipalityId")
                        .HasColumnType("int");

                    b.Property<string>("PersonnelNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.Property<int>("SiteId")
                        .HasColumnType("int");

                    b.Property<int>("TrainingEventNameId")
                        .HasColumnType("int");

                    b.HasKey("TrainingEventId");

                    b.HasIndex("EventTypeId");

                    b.HasIndex("IDNumber");

                    b.HasIndex("MunicipalityId");

                    b.HasIndex("PersonnelNumber");

                    b.HasIndex("ProvinceId");

                    b.HasIndex("RegionId");

                    b.HasIndex("SiteId");

                    b.HasIndex("TrainingEventNameId");

                    b.ToTable("TrainingEvents");
                });

            modelBuilder.Entity("PPC.TrainingDevelopment.Api.Models.TrainingRecordEvent", b =>
                {
                    b.Property<int>("TrainingRecordEventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrainingRecordEventId"));

                    b.Property<decimal?>("Accommodation")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("AdministrationCosts")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CostTrainers")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CostTrainingFacilities")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CostTrainingMaterials")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CourseFees")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("EquipmentDepreciation")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("Evidence")
                        .HasColumnType("bit");

                    b.Property<int?>("Hours")
                        .HasColumnType("int");

                    b.Property<decimal?>("Meal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Minutes")
                        .HasColumnType("int");

                    b.Property<string>("PersonnelNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("ScholarshipsBursaries")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ServiceProviderExternal")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TrainingEventId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Travel")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("TrainingRecordEventId");

                    b.HasIndex("EndDate");

                    b.HasIndex("Evidence");

                    b.HasIndex("PersonnelNumber");

                    b.HasIndex("StartDate");

                    b.HasIndex("TrainingEventId");

                    b.ToTable("TrainingRecordEvents");
                });

            modelBuilder.Entity("PPC.TrainingDevelopment.Api.Models.LookupValue", b =>
                {
                    b.HasOne("PPC.TrainingDevelopment.Api.Models.LookupValue", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("PPC.TrainingDevelopment.Api.Models.TrainingEvent", b =>
                {
                    b.HasOne("PPC.TrainingDevelopment.Api.Models.LookupValue", "EventType")
                        .WithMany()
                        .HasForeignKey("EventTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PPC.TrainingDevelopment.Api.Models.LookupValue", "Municipality")
                        .WithMany()
                        .HasForeignKey("MunicipalityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PPC.TrainingDevelopment.Api.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("PersonnelNumber")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PPC.TrainingDevelopment.Api.Models.LookupValue", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PPC.TrainingDevelopment.Api.Models.LookupValue", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PPC.TrainingDevelopment.Api.Models.LookupValue", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PPC.TrainingDevelopment.Api.Models.LookupValue", "TrainingEventName")
                        .WithMany()
                        .HasForeignKey("TrainingEventNameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("EventType");

                    b.Navigation("Municipality");

                    b.Navigation("Province");

                    b.Navigation("Region");

                    b.Navigation("Site");

                    b.Navigation("TrainingEventName");
                });

            modelBuilder.Entity("PPC.TrainingDevelopment.Api.Models.TrainingRecordEvent", b =>
                {
                    b.HasOne("PPC.TrainingDevelopment.Api.Models.TrainingEvent", "TrainingEvent")
                        .WithMany("TrainingRecordEvents")
                        .HasForeignKey("TrainingEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrainingEvent");
                });

            modelBuilder.Entity("PPC.TrainingDevelopment.Api.Models.LookupValue", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("PPC.TrainingDevelopment.Api.Models.TrainingEvent", b =>
                {
                    b.Navigation("TrainingRecordEvents");
                });
#pragma warning restore 612, 618
        }
    }
}
